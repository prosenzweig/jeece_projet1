# Generated by Django 2.0.6 on 2018-09-03 15:00

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
                ('auteur', models.CharField(default='admin', max_length=50)),
                ('contenu', models.TextField(null=True)),
                ('photo', models.FileField(default=None, upload_to='photos/')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de parution')),
            ],
            options={
                'verbose_name': 'article',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Attestation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.SmallIntegerField()),
                ('created', models.DateField(default=datetime.date(2018, 9, 3), verbose_name="date d'émission")),
                ('last', models.DateField(default=datetime.date(2019, 9, 3), verbose_name="date d'échéance")),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='User_professor', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='User_student', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duree_cours', models.SmallIntegerField(default=0, verbose_name='Durée des cours')),
                ('mois', models.CharField(max_length=7)),
                ('is_valid_t', models.BooleanField(default=False)),
                ('is_valid_s', models.BooleanField(default=False)),
                ('is_unvalid', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tva', models.FloatField(default=None)),
                ('price_ht', models.FloatField(default=None)),
                ('price_ttc', models.FloatField(default=None)),
                ('object', models.CharField(default=None, max_length=60)),
                ('object_qt', models.FloatField(default=None)),
                ('type', models.CharField(default=None, max_length=60)),
                ('created', models.DateField(default=datetime.date(2018, 9, 3), verbose_name="date d'émission")),
                ('last', models.DateField(default=datetime.date(2018, 9, 10), verbose_name="date d'échéance")),
                ('is_paid', models.BooleanField(default=False)),
                ('from_user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, related_name='User_who_send_the_bill', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, related_name='User_who_received_the_bill', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(validators=[django.core.validators.RegexValidator(regex='^[0-9a-f-]+$')])),
                ('email', models.EmailField(max_length=254)),
                ('valid', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime(2018, 9, 3, 17, 0, 37, 325568))),
                ('object', models.CharField(max_length=60)),
                ('text', models.CharField(max_length=340)),
                ('from_user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='User_who_send_the_notification', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='User_who_received_the_notification', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(default=datetime.date(2018, 9, 4), verbose_name='Début')),
                ('end', models.DateField(blank=True, default=None, null=True, verbose_name='Fin')),
                ('tva', models.FloatField(max_length=5)),
                ('adhesion', models.FloatField(max_length=5)),
                ('cours', models.FloatField(max_length=5)),
                ('commission', models.FloatField(max_length=5)),
                ('frais_gestion', models.FloatField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_in_relation_model', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_in_relation_model', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('phone_number', models.CharField(blank=True, max_length=19, validators=[django.core.validators.RegexValidator(message='Le numéro de téléphone doit suivre le format XX.XX.XX.XX.XX', regex='^(?:(?:\\+|00)33|0)\\s*[1-9](?:[\\s.-]*\\d{2}){4}$')])),
                ('address', models.CharField(default='', max_length=60)),
                ('city', models.CharField(default='', max_length=50)),
                ('country', models.CharField(default='France', max_length=50)),
                ('lat', models.FloatField(blank=True, default='0', null=True)),
                ('lgn', models.FloatField(blank=True, default='0', null=True)),
                ('zip_code', models.CharField(blank=True, max_length=6, validators=[django.core.validators.RegexValidator(message='Le Code Postal doit suivre le format DDDDD', regex='^(([0-8][0-9])|(9[0-5])|(2[ab]))[0-9]{3}$')])),
                ('iban', models.CharField(blank=True, max_length=27, validators=[django.core.validators.RegexValidator(regex='^([A-Za-z]{2}[ \\-]?[0-9]{2})(?=(?:[ \\-]?[A-Za-z0-9]){9,30}$)((?:[ \\-]?[A-Za-z0-9]{3,5}){2,6})([ \\-]?[A-Za-z0-9]{1,3})?$')])),
                ('is_adherent', models.BooleanField(default=False)),
                ('siret', models.CharField(default='SIRET', max_length=21)),
                ('sap', models.CharField(default='SAP', max_length=11)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='cour',
            name='relation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='intranet.Relation'),
        ),
    ]
